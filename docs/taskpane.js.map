{"version":3,"file":"taskpane.js","mappings":";yBAsBO,IAAIA,EAAgB,CACzBC,OAAQ,MACRC,OAAQ,aACRC,SAAU,UACVC,SAAU,UACVC,gBAAgB,EAChBC,YAAa,IACbC,YAAa,gBC5Bf,09NAwBA,IAAIC,GAAU,EA4BP,SAASC,IACd,IACEC,OAAOC,QAAQC,gBAAgBC,IAAI,SAAUb,EAAcC,QAC3DS,OAAOC,QAAQC,gBAAgBC,IAAI,SAAUb,EAAcE,QAC3DQ,OAAOC,QAAQC,gBAAgBC,IAAI,WAAYb,EAAcG,UAC7DO,OAAOC,QAAQC,gBAAgBC,IAAI,WAAYb,EAAcI,UAC7DM,OAAOC,QAAQC,gBAAgBC,IAAI,iBAAkBb,EAAcK,gBACnEK,OAAOC,QAAQC,gBAAgBC,IAAI,cAAeb,EAAcM,aAChEI,OAAOC,QAAQC,gBAAgBC,IAAI,cAAeb,EAAcO,aAChEG,OAAOC,QAAQC,gBAAgBE,WAChB,CAAf,MAAOC,GAAQ,CACnB,CA2BA,SAASC,IACPC,SAASC,eAAe,aAAaC,MAAQnB,EAAcC,OAC3DgB,SAASC,eAAe,aAAaC,MAAQnB,EAAcE,OAC3De,SAASC,eAAe,eAAeC,MAAQnB,EAAcG,SAC7Dc,SAASC,eAAe,eAAeC,MAAQnB,EAAcI,SAC7Da,SAASC,eAAe,qBAAqBE,QAAUpB,EAAcK,eACrEY,SAASC,eAAe,iBAAiBC,MAAQnB,EAAcM,YAC/DW,SAASC,eAAe,iBAAiBC,MAAQnB,EAAcO,YAIjE,SAAuBc,EAAYC,GAA4B,IAAjBC,EAAU,UAAH,8CAC/CC,EAAOP,SAASC,eAAeG,GAC/BI,EAAOR,SAASC,eAAeI,GAC/BE,EAAKJ,QACPK,EAAKC,SAAWH,EAEhBE,EAAKC,UAAYH,CAErB,CAXEI,CAAc,oBAAqB,gBACrC,CAsBA,SAASC,IACHpB,IAEJA,GAAU,EAZVR,EAAcC,OAASgB,SAASC,eAAe,aAAaC,MAC5DnB,EAAcE,OAASe,SAASC,eAAe,aAAaC,MAC5DnB,EAAcG,SAAWc,SAASC,eAAe,eAAeC,MAChEnB,EAAcI,SAAWa,SAASC,eAAe,eAAeC,MAChEnB,EAAcK,eAAiBY,SAASC,eAAe,qBAAqBE,QAC5EpB,EAAcM,YAAcuB,KAAKC,IAAI,EAAGD,KAAKE,IAAI,KAAMd,SAASC,eAAe,iBAAiBC,QAChGnB,EAAcO,YAAcsB,KAAKC,IAAI,EAAKD,KAAKE,IAAI,EAAKd,SAASC,eAAe,iBAAiBC,QAQjGH,IACAR,GAAU,EACZ,CAEA,SAASwB,IACPC,EAAQ,gBAAiB,YAC3B,CAEA,SAASC,IACPD,EAAQ,eAAgB,UAC1B,CAEA,SAASA,EAAQE,EAAUC,GACzB,IAAIC,EAAGC,EAEP,IADAA,EAAarB,SAASsB,uBAAuB,cACxCF,EAAI,EAAGA,EAAIC,EAAWE,OAAQH,IACjCC,EAAWD,GAAGI,MAAMC,QAAU,OAGhC,IAAIC,EAAgB1B,SAASC,eAAe,iBACxC0B,EAAe3B,SAASC,eAAe,gBAC3CyB,EAAcE,UAAYF,EAAcE,UAAUC,QAAQ,cAAe,IACzEF,EAAaC,UAAYD,EAAaC,UAAUC,QAAQ,cAAe,IAEvE9B,IACAC,SAASC,eAAekB,GAASK,MAAMC,QAAU,OACjDzB,SAASC,eAAeiB,GAAUU,WAAa,aACjD,CAoFO,SAAeE,IAAG,+BA6DxB,kCA7DM,8EAGL9B,SAASC,eAAe,gCAAgCuB,MAAMO,WAAa,SAC3E/B,SAASC,eAAe,oBAAoBuB,MAAMO,WAAa,SAC/D/B,SAASC,eAAe,oBAAoB2B,UAAY,GAExDnC,OAAOC,QAAQsC,QAAQC,KAAKC,qBAC1BzC,OAAO0C,aAAaC,KACpB,CAAEC,YAAa,eAAe,6BAC9B,WAAOC,GAAM,gFACPA,EAAOC,SAAW9C,OAAO+C,kBAAkBC,UAAS,iBACvC,GAAXC,EAAS,GACe,IAAxB3D,EAAcE,OAAY,iBAoB3B,GAnBG0D,EAAWL,EAAOpC,MAAM0C,KAEV,GAEhBC,EADsB,iBAAbF,EACKA,EAEAG,OAAOH,GAGP,IAAZA,IACFD,EAAS,6BAA+B3D,EAAcG,SAElDH,EAAcK,eAChBsD,GAAU,6BAA+B3D,EAAcM,YAAc,UAErEqD,GAAU,mBAGZA,GAAU,UAAY3D,EAAcE,OAAS,+CAAiD4D,GAGlF,IAAVH,EAAY,iBACN,gBACuC,QAAvCK,EAAa,EAAH,KAChB/C,SAASC,eAAe,oBAAoB+C,UAAYD,EAAW,GAAGE,YAAYpB,QAAQ,KAAM,QAE5FkB,EAAW,KAAI/C,SAASC,eAAe,gCAAgCuB,MAAMO,WAAa,WAAU,wBAExG/B,SAASC,eAAe,oBAAoB+C,UAAYN,EAAOO,YAAYpB,QAAQ,KAAM,QAAQ,QAGnG7B,SAASC,eAAe,oBAAoBuB,MAAMO,WAAa,UAAU,wBAEzE/B,SAASC,eAAe,oBAAoBuB,MAAMO,WAAa,UAC/D/B,SAASC,eAAe,oBAAoB+C,UAAY,0BAA0B,gCAGpFhD,SAASC,eAAe,oBAAoBuB,MAAMO,WAAa,UAC/D/B,SAASC,eAAe,oBAAoB+C,UAAY,iCAAiC,gCAG3FhD,SAASC,eAAe,oBAAoBuB,MAAMO,WAAa,UAC/D/B,SAASC,eAAe,oBAAoB+C,UAAY,0BAA0B,QAEpFhD,SAASC,eAAe,oBAAoB2B,UAAY,cAAc,4CACvE,mDAlD6B,IAmD9B,2CACH,wBAEM,SAAesB,IAAyB,+BAO9C,kCAPM,sFAGQ,MAFTC,EAAOnD,SAASC,eAAe,oBAAoB+C,aAG/CI,EAAgBD,EAAKtB,QAAQ,OAAQ,MAAMoB,YACjDxD,OAAOC,QAAQsC,QAAQC,KAAKoB,qBAAqBD,IAClD,4CACF,sBAzRD3D,OAAO6D,SAAQ,SAACC,GACd,GAAIA,EAAKC,OAAS/D,OAAOgE,SAASC,QAAS,CAEzC,IADA,IAAIrC,EAAarB,SAASsB,uBAAuB,cACxCF,EAAI,EAAGA,EAAIC,EAAWE,OAAQH,IACrCC,EAAWD,GAAGI,MAAMC,QAAU,OAGhCzB,SAASC,eAAe,OAAO0D,QAAU7B,EACzC9B,SAASC,eAAe,aAAa2D,OAASjD,EAC9CX,SAASC,eAAe,eAAe4D,SAAWlD,EAClDX,SAASC,eAAe,eAAe4D,SAAWlD,EAClDX,SAASC,eAAe,qBAAqB4D,SAAWlD,EACxDX,SAASC,eAAe,iBAAiB2D,OAASjD,EAClDX,SAASC,eAAe,iBAAiB2D,OAASjD,EAClDX,SAASC,eAAe,aAAa2D,OAASjD,EAC9CX,SAASC,eAAe,kBAAkB0D,QAAUnE,EACpDQ,SAASC,eAAe,gCAAgC0D,QAAUT,EAElElD,SAASC,eAAe,iBAAiB0D,QAAU5C,EACnDf,SAASC,eAAe,gBAAgB0D,QAAU1C,EAoB/C,WACL,IACE,IAAMjC,EAASS,OAAOC,QAAQC,gBAAgBmE,IAAI,UAC9C,EAAO9E,KAAM,EAAYD,EAAcC,UAAQD,EAAcC,OAASA,GAE1E,IAAMC,EAASQ,OAAOC,QAAQC,gBAAgBmE,IAAI,UAC9C,EAAO7E,KAAM,EAAYF,EAAcE,UAAQF,EAAcE,OAASA,GAE1E,IAAMC,EAAWO,OAAOC,QAAQC,gBAAgBmE,IAAI,YAChD,EAAO5E,KAAQ,EAAYH,EAAcG,YAAUH,EAAcG,SAAWA,GAEhF,IAAMC,EAAWM,OAAOC,QAAQC,gBAAgBmE,IAAI,YAChD,EAAO3E,KAAQ,EAAYJ,EAAcI,YAAUJ,EAAcI,SAAWA,GAEhF,IAAMC,EAAiBK,OAAOC,QAAQC,gBAAgBmE,IAAI,kBACtD,EAAO1E,KAAc,EAAYL,EAAcK,kBAAgBL,EAAcK,eAAiBA,GAElG,IAAMC,EAAcI,OAAOC,QAAQC,gBAAgBmE,IAAI,eACnD,EAAOzE,KAAW,EAAYN,EAAcM,eAAaN,EAAcM,YAAcA,GAEzF,IAAMC,EAAcG,OAAOC,QAAQC,gBAAgBmE,IAAI,eACnD,EAAOxE,KAAW,EAAYP,EAAcO,eAAaP,EAAcO,YAAcA,EAC1E,CAAf,MAAOQ,GAAQ,CACnB,CA1CIiE,GACAhD,IACAf,SAASC,eAAe,gCAAgCuB,MAAMO,WAAa,QAC7E,CACF","sources":["webpack://office-addin-taskpane-js/./src/taskpane/GlobalOptions.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/*\r\n  Copyright (c) 2023 Stefano Aldegheri\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included in all\r\n  copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n  SOFTWARE.\r\n*/\r\n\r\nexport var globalOptions = {\r\n  gptKey: \"---\",\r\n  format: \"journalist\",\r\n  language: \"english\",\r\n  gptModel: \"davinci\",\r\n  setMaxNumWords: false,\r\n  maxNumWords: 500,\r\n  temperature: 0,\r\n};\r\n","/*\r\n  Copyright (c) 2023 Stefano Aldegheri\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included in all\r\n  copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n  SOFTWARE.\r\n*/\r\n\r\n/* global document, Office */\r\n\r\nimport { globalOptions } from \"./GlobalOptions\";\r\nvar initGui = false;\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Outlook) {\r\n    var tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    for (var i = 0; i < tabcontent.length; i++) {\r\n      tabcontent[i].style.display = \"none\";\r\n    }\r\n    //document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"run\").onclick = run;\r\n    document.getElementById(\"txtAPIKEY\").onblur = valuesChanged;\r\n    document.getElementById(\"cmbLanguage\").onchange = valuesChanged;\r\n    document.getElementById(\"cmbGPTModel\").onchange = valuesChanged;\r\n    document.getElementById(\"chkSetMaxNumWords\").onchange = valuesChanged;\r\n    document.getElementById(\"iiMaxNumWords\").onblur = valuesChanged;\r\n    document.getElementById(\"diTemperature\").onblur = valuesChanged;\r\n    document.getElementById(\"txtFormat\").onblur = valuesChanged;\r\n    document.getElementById(\"btnSaveOptions\").onclick = saveOptions;\r\n    document.getElementById(\"btnSubstituteSelectionInMail\").onclick = substituteSelectionInMail;\r\n\r\n    document.getElementById(\"tbBtnRephrase\").onclick = showTabRephraser;\r\n    document.getElementById(\"tbBtnOptions\").onclick = showTabOptions;\r\n    loadOptions();\r\n    showTabRephraser();\r\n    document.getElementById(\"btnSubstituteSelectionInMail\").style.visibility = \"hidden\";\r\n  }\r\n});\r\n\r\nexport function saveOptions() {\r\n  try {\r\n    Office.context.roamingSettings.set(\"gptKey\", globalOptions.gptKey);\r\n    Office.context.roamingSettings.set(\"format\", globalOptions.format);\r\n    Office.context.roamingSettings.set(\"language\", globalOptions.language);\r\n    Office.context.roamingSettings.set(\"gptModel\", globalOptions.gptModel);\r\n    Office.context.roamingSettings.set(\"setMaxNumWords\", globalOptions.setMaxNumWords);\r\n    Office.context.roamingSettings.set(\"maxNumWords\", globalOptions.maxNumWords);\r\n    Office.context.roamingSettings.set(\"temperature\", globalOptions.temperature);\r\n    Office.context.roamingSettings.saveAsync();\r\n  } catch (error) {}\r\n}\r\n\r\nexport function loadOptions() {\r\n  try {\r\n    const gptKey = Office.context.roamingSettings.get(\"gptKey\");\r\n    if (typeof gptKey === typeof globalOptions.gptKey) globalOptions.gptKey = gptKey;\r\n\r\n    const format = Office.context.roamingSettings.get(\"format\");\r\n    if (typeof format === typeof globalOptions.format) globalOptions.format = format;\r\n\r\n    const language = Office.context.roamingSettings.get(\"language\");\r\n    if (typeof language === typeof globalOptions.language) globalOptions.language = language;\r\n\r\n    const gptModel = Office.context.roamingSettings.get(\"gptModel\");\r\n    if (typeof gptModel === typeof globalOptions.gptModel) globalOptions.gptModel = gptModel;\r\n\r\n    const setMaxNumWords = Office.context.roamingSettings.get(\"setMaxNumWords\");\r\n    if (typeof setMaxNumWords === typeof globalOptions.setMaxNumWords) globalOptions.setMaxNumWords = setMaxNumWords;\r\n\r\n    const maxNumWords = Office.context.roamingSettings.get(\"maxNumWords\");\r\n    if (typeof maxNumWords === typeof globalOptions.maxNumWords) globalOptions.maxNumWords = maxNumWords;\r\n\r\n    const temperature = Office.context.roamingSettings.get(\"temperature\");\r\n    if (typeof temperature === typeof globalOptions.temperature) globalOptions.temperature = temperature;\r\n  } catch (error) {}\r\n}\r\n\r\nfunction dataToGUI() {\r\n  document.getElementById(\"txtAPIKEY\").value = globalOptions.gptKey;\r\n  document.getElementById(\"txtFormat\").value = globalOptions.format;\r\n  document.getElementById(\"cmbLanguage\").value = globalOptions.language;\r\n  document.getElementById(\"cmbGPTModel\").value = globalOptions.gptModel;\r\n  document.getElementById(\"chkSetMaxNumWords\").checked = globalOptions.setMaxNumWords;\r\n  document.getElementById(\"iiMaxNumWords\").value = globalOptions.maxNumWords;\r\n  document.getElementById(\"diTemperature\").value = globalOptions.temperature;\r\n  toggleEnabled(\"chkSetMaxNumWords\", \"iiMaxNumWords\");\r\n}\r\n\r\nfunction toggleEnabled(checkboxID, controlID, reverse = false) {\r\n  var chk1 = document.getElementById(checkboxID);\r\n  var txt1 = document.getElementById(controlID);\r\n  if (chk1.checked) {\r\n    txt1.disabled = reverse;\r\n  } else {\r\n    txt1.disabled = !reverse;\r\n  }\r\n}\r\n\r\nfunction guiToData() {\r\n  globalOptions.gptKey = document.getElementById(\"txtAPIKEY\").value;\r\n  globalOptions.format = document.getElementById(\"txtFormat\").value;\r\n  globalOptions.language = document.getElementById(\"cmbLanguage\").value;\r\n  globalOptions.gptModel = document.getElementById(\"cmbGPTModel\").value;\r\n  globalOptions.setMaxNumWords = document.getElementById(\"chkSetMaxNumWords\").checked;\r\n  globalOptions.maxNumWords = Math.max(1, Math.min(2040, document.getElementById(\"iiMaxNumWords\").value));\r\n  globalOptions.temperature = Math.max(0.0, Math.min(1.0, document.getElementById(\"diTemperature\").value));\r\n}\r\n\r\nfunction valuesChanged() {\r\n  if (initGui) return;\r\n\r\n  initGui = true;\r\n  guiToData();\r\n  dataToGUI();\r\n  initGui = false;\r\n}\r\n\r\nfunction showTabRephraser() {\r\n  showTab(\"tbLblRephrase\", \"Rephraser\");\r\n}\r\n\r\nfunction showTabOptions() {\r\n  showTab(\"tbLblOptions\", \"Options\");\r\n}\r\n\r\nfunction showTab(tabLabel, tabName) {\r\n  var i, tabcontent;\r\n  tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n  for (i = 0; i < tabcontent.length; i++) {\r\n    tabcontent[i].style.display = \"none\";\r\n  }\r\n\r\n  var tbLblRephrase = document.getElementById(\"tbLblRephrase\");\r\n  var tbLblOptions = document.getElementById(\"tbLblOptions\");\r\n  tbLblRephrase.className = tbLblRephrase.className.replace(\" lblChecked\", \"\");\r\n  tbLblOptions.className = tbLblOptions.className.replace(\" lblChecked\", \"\");\r\n\r\n  dataToGUI();\r\n  document.getElementById(tabName).style.display = \"flex\";\r\n  document.getElementById(tabLabel).className += \" lblChecked\";\r\n}\r\n\r\nfunction modelToText(model) {\r\n  switch (model) {\r\n    case \"ada\":\r\n      return \"text-ada-001\";\r\n    case \"babbage\":\r\n      return \"text-babbage-001\";\r\n    case \"curie\":\r\n      return \"text-curie-001\";\r\n    case \"davinci\":\r\n      return \"text-davinci-003\";\r\n    default:\r\n      return \"text-curie-001\";\r\n  }\r\n}\r\n\r\nasync function makeGPTRequest(prompt, api_key, max_tokens, modelStr, temperature) {\r\n  const MODEL = modelToText(modelStr);\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open(\"POST\", \"https://api.openai.com/v1/completions\");\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n  xhr.setRequestHeader(\"Authorization\", `Bearer ${api_key}`);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    xhr.onload = () => {\r\n      try {\r\n        if (xhr.status === 200) {\r\n          resolve(JSON.parse(xhr.response));\r\n        } else if (xhr.responseText != \"\") {\r\n          reject(JSON.parse(xhr.responseText));\r\n        } else {\r\n          reject(xhr.statusText);\r\n        }\r\n      } catch (e) {\r\n        reject(e.message);\r\n      }\r\n    };\r\n\r\n    xhr.send(\r\n      JSON.stringify({\r\n        model: MODEL,\r\n        prompt: prompt,\r\n        max_tokens: max_tokens,\r\n        temperature: temperature,\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\nasync function rephraseText(prompt) {\r\n  var nTok = 2040;\r\n  if (globalOptions.model === \"davinci\") nTok = 4000;\r\n\r\n  try {\r\n    const resultText = await makeGPTRequest(\r\n      prompt,\r\n      globalOptions.gptKey,\r\n      nTok,\r\n      globalOptions.gptModel,\r\n      globalOptions.temperature\r\n    );\r\n    if (typeof resultText === \"string\") {\r\n      return [\"Error:<br>\" + resultText, false];\r\n    } else if (\"choices\" in resultText) {\r\n      return [resultText[\"choices\"][0][\"text\"], true];\r\n    } else if (\"error\" in resultText) {\r\n      return [\"Error:<br>\" + resultText[\"error\"][\"message\"], false];\r\n    } else {\r\n      return [\"Error:<br>Generic Error\", false];\r\n    }\r\n  } catch (ex) {\r\n    if (typeof ex === \"string\") {\r\n      return [\"Error:<br>\" + ex, false];\r\n    } else if (\"choices\" in ex) {\r\n      return [ex[\"choices\"][0][\"text\"], true];\r\n    } else if (\"error\" in ex) {\r\n      return [\"Error:<br>\" + ex[\"error\"][\"message\"], false];\r\n    } else {\r\n      return [\"Error:<br>Generic Error\", false];\r\n    }\r\n  }\r\n}\r\n\r\nexport async function run() {\r\n  var PROD = false;\r\n\r\n  document.getElementById(\"btnSubstituteSelectionInMail\").style.visibility = \"hidden\";\r\n  document.getElementById(\"lblRephrasedText\").style.visibility = \"hidden\";\r\n  document.getElementById(\"lblRephrasedText\").className = \"\";\r\n\r\n  Office.context.mailbox.item.getSelectedDataAsync(\r\n    Office.CoercionType.Text,\r\n    { valueFormat: \"unformatted\" },\r\n    async (result) => {\r\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\r\n        var prompt = \"\";\r\n        if (globalOptions.format != \"\") {\r\n          var bodyData = result.value.data;\r\n\r\n          var bodyDataStr = \"\";\r\n          if (typeof bodyData === \"string\") {\r\n            bodyDataStr = bodyData;\r\n          } else {\r\n            bodyDataStr = String(bodyData);\r\n          }\r\n\r\n          if (bodyData != \"\") {\r\n            prompt = \"If necessary translate in \" + globalOptions.language;\r\n\r\n            if (globalOptions.setMaxNumWords) {\r\n              prompt += \" and summarize in maximum \" + globalOptions.maxNumWords + \" words \";\r\n            } else {\r\n              prompt += \" and paraphrase \";\r\n            }\r\n\r\n            prompt += \"like a \" + globalOptions.format + \" without adding any additional information: \" + bodyDataStr;\r\n          }\r\n\r\n          if (prompt != \"\") {\r\n            if (PROD) {\r\n              const resultText = await rephraseText(prompt);\r\n              document.getElementById(\"lblRephrasedText\").innerHTML = resultText[0].trimStart().replace(\"\\n\", \"<br>\");\r\n\r\n              if (resultText[1]) document.getElementById(\"btnSubstituteSelectionInMail\").style.visibility = \"visible\";\r\n            } else {\r\n              document.getElementById(\"lblRephrasedText\").innerHTML = prompt.trimStart().replace(\"\\n\", \"<br>\");\r\n            }\r\n\r\n            document.getElementById(\"lblRephrasedText\").style.visibility = \"visible\";\r\n          } else {\r\n            document.getElementById(\"lblRephrasedText\").style.visibility = \"visible\";\r\n            document.getElementById(\"lblRephrasedText\").innerHTML = \"Error: No text selected\";\r\n          }\r\n        } else {\r\n          document.getElementById(\"lblRephrasedText\").style.visibility = \"visible\";\r\n          document.getElementById(\"lblRephrasedText\").innerHTML = \"Error: Invalid format selected\";\r\n        }\r\n      } else {\r\n        document.getElementById(\"lblRephrasedText\").style.visibility = \"visible\";\r\n        document.getElementById(\"lblRephrasedText\").innerHTML = \"Error: No text selected\";\r\n      }\r\n      document.getElementById(\"lblRephrasedText\").className = \"lblWordWrap\";\r\n    }\r\n  );\r\n}\r\n\r\nexport async function substituteSelectionInMail() {\r\n  var text = document.getElementById(\"lblRephrasedText\").innerHTML;\r\n\r\n  if (text !== \"\") {\r\n    const formattedText = text.replace(\"<br>\", \"\\n\").trimStart();\r\n    Office.context.mailbox.item.setSelectedDataAsync(formattedText);\r\n  }\r\n}\r\n"],"names":["globalOptions","gptKey","format","language","gptModel","setMaxNumWords","maxNumWords","temperature","initGui","saveOptions","Office","context","roamingSettings","set","saveAsync","error","dataToGUI","document","getElementById","value","checked","checkboxID","controlID","reverse","chk1","txt1","disabled","toggleEnabled","valuesChanged","Math","max","min","showTabRephraser","showTab","showTabOptions","tabLabel","tabName","i","tabcontent","getElementsByClassName","length","style","display","tbLblRephrase","tbLblOptions","className","replace","run","visibility","mailbox","item","getSelectedDataAsync","CoercionType","Text","valueFormat","result","status","AsyncResultStatus","Succeeded","prompt","bodyData","data","bodyDataStr","String","resultText","innerHTML","trimStart","substituteSelectionInMail","text","formattedText","setSelectedDataAsync","onReady","info","host","HostType","Outlook","onclick","onblur","onchange","get","loadOptions"],"sourceRoot":""}